// Generated by CoffeeScript 1.12.1
(function() {
  var HrArticle, SearchCondition, article, articleList, form, regexpSearch, searchHandler,
    hasProp = {}.hasOwnProperty;

  HrArticle = (function() {
    var getTagsFromUl;

    getTagsFromUl = function(ul) {
      var i, len, li, ref, results;
      ref = ul.children;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        li = ref[i];
        results.push(li.textContent.trim());
      }
      return results;
    };

    function HrArticle(articleNode) {
      this.node = articleNode;
      this.title = articleNode.getElementsByTagName('h2')[0].textContent.trim();
      this.url = articleNode.getElementsByTagName('h2')[0].children[0].href;
      this.date = new Date(articleNode.getElementsByTagName('small')[0].textContent);
      this.description = articleNode.getElementsByTagName('p')[0].textContent;
      this.tags = getTagsFromUl(articleNode.getElementsByTagName('ul')[0]);
    }

    HrArticle.prototype.containTags = function(tags) {
      return this.tags.some(function(articleTag) {
        return tags.some(function(givenTag) {
          return givenTag === articleTag;
        });
      });
    };

    return HrArticle;

  })();

  articleList = (function() {
    var i, len, ref, results;
    ref = document.getElementsByTagName('article');
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      article = ref[i];
      results.push(new HrArticle(article));
    }
    return results;
  })();

  window.articleList = articleList;

  regexpSearch = function(list, name, regexp) {
    return list.filter(function(article) {
      return regexp.test(article[name]);
    });
  };

  window.searchShower = {
    node: document.getElementById('article-list'),
    show: function(articleList) {
      var i, len, results;
      results = [];
      for (i = 0, len = articleList.length; i < len; i++) {
        article = articleList[i];
        results.push(this.node.appendChild(article.node));
      }
      return results;
    },
    clear: function() {
      return this.node.textContent = '';
    }
  };

  SearchCondition = (function() {
    var createFromFormNode, createFromQueryString, xWwwUrlEncode;

    xWwwUrlEncode = function(string) {
      return encodeURIComponent(string).replace(/%20/g, '+');
    };

    createFromQueryString = function(string) {
      var i, key, keyAndValue, len, ref, ref1, results, value;
      ref = string.replace(/^\?/, '').split(/&/g);
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        keyAndValue = ref[i];
        ref1 = keyAndValue.split('='), key = ref1[0], value = ref1[1];
        switch (key) {
          case 'tags':
            results.push(this[key] = value.split(/\+/g).map(decodeURIComponent));
            break;
          default:
            results.push(this[key] = decodeURIComponent(value));
        }
      }
      return results;
    };

    createFromFormNode = function(node) {
      var i, input, len, ref, results;
      ref = node.getElementsByTagName('input');
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        input = ref[i];
        results.push(this[input.name] = input.value);
      }
      return results;
    };

    function SearchCondition(nodeOrUrl) {
      if (typeof nodeOrUrl === 'string') {
        createFromQueryString.call(this, nodeOrUrl);
      } else if (nodeOrUrl instanceof Node) {
        createFromFormNode.call(this, nodeOrUrl);
      } else {
        throw "not node or queryString";
      }
    }

    SearchCondition.prototype.toString = function() {
      var name, value;
      return '?' + ((function() {
        var ref, results;
        ref = this;
        results = [];
        for (name in ref) {
          if (!hasProp.call(ref, name)) continue;
          value = ref[name];
          results.push(name + "=" + (xWwwUrlEncode(value)));
        }
        return results;
      }).call(this)).join('&');
    };

    return SearchCondition;

  })();

  searchHandler = function(query) {
    searchShower.clear();
    return searchShower.show(articleList.filter(function(a) {
      return a.containTags(query.tags);
    }));
  };

  form = document.getElementsByTagName('form')[0];

  form.onsubmit = function() {
    var query;
    query = new SearchCondition(this);
    window.history.pushState({}, 'searching...', query.toString());
    searchHandler(query);
    window.query = query;
    return false;
  };

  if (window.location.search) {
    searchHandler(new SearchCondition(window.location.search));
  }

}).call(this);
