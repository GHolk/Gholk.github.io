// Generated by CoffeeScript 1.12.1
(function() {
  var LoaderByCheerio, cheerio;

  cheerio = require('cheerio');

  LoaderByCheerio = (function() {
    function LoaderByCheerio(HTMLText) {
      this.selector = cheerio.load(HTMLText, {
        decodeEntities: false,
        xmlMode: false,
        withDomLvl1: true,
        normalizeWhitespace: false
      });
    }

    LoaderByCheerio.prototype.date = function(setDate) {
      var query;
      query = 'meta[name=date]';
      if (setDate != null) {
        return this.selector(query).attr('content', setDate);
      } else {
        return this.selector(query).attr('content');
      }
    };

    LoaderByCheerio.prototype.index = function(setIndex) {
      var query;
      query = 'link[rel=index]';
      if (setIndex != null) {
        return this.selector(query).attr('href', setIndex);
      } else {
        return this.selector(query).attr('href');
      }
    };

    LoaderByCheerio.prototype.prev = function(setPrev) {
      var query;
      query = 'link[rel=prev]';
      if (setPrev != null) {
        return this.selector(query).attr('href', setPrev);
      } else {
        return this.selector(query).attr('href');
      }
    };

    LoaderByCheerio.prototype.next = function(setNext) {
      var query;
      query = 'link[rel=next]';
      if (setNext != null) {
        return this.selector(query).attr('href', setNext);
      } else {
        return this.selector(query).attr('href');
      }
    };

    LoaderByCheerio.prototype.title = function(setTitle) {
      var query;
      query = 'title';
      if (setTitle != null) {
        return this.selector(query).text(setTitle);
      } else {
        return this.selector(query).text();
      }
    };

    LoaderByCheerio.prototype.main = function(setMain) {
      var query;
      query = 'main';
      if (setMain != null) {
        return this.selector(query).html(setMain);
      } else {
        return this.selector(query).html();
      }
    };

    LoaderByCheerio.prototype.tags = function(setTags) {
      var query;
      query = 'meta[name=keywords]';
      if (Array.isArray(setTags)) {
        setTags = setTags.join(',');
      }
      if (setTags != null) {
        return this.selector(query).attr('content', setTags);
      } else {
        return this.selector(query).attr('content');
      }
    };

    LoaderByCheerio.prototype.clear = function() {
      var attr, i, len, ref, results;
      ref = ['main', 'title', 'tags', 'date', 'prev', 'next'];
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        attr = ref[i];
        results.push(this[attr](''));
      }
      return results;
    };

    LoaderByCheerio.prototype.update = function(newText) {
      var i, j, len, len1, mustUpdate, optionalUpdate, ref, ref1, results;
      ref = ['main', 'title', 'tags'];
      for (i = 0, len = ref.length; i < len; i++) {
        mustUpdate = ref[i];
        this[mustUpdate](newText[mustUpdate]());
      }
      ref1 = ['date', 'prev', 'next'];
      results = [];
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        optionalUpdate = ref1[j];
        if (!this[optionalUpdate]()) {
          results.push(this[optionalUpdate](typeof newText[optionalUpdate] === "function" ? newText[optionalUpdate]() : void 0));
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    LoaderByCheerio.prototype.toString = function() {
      return this.selector.html();
    };

    return LoaderByCheerio;

  })();

  module.exports = LoaderByCheerio;

}).call(this);
