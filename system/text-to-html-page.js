#!/usr/bin/env node
// Generated by CoffeeScript 1.12.1
(function() {
  var cookRaw, fileNames, fs, getMeta, marked, path, templateReplace;

  fs = require('fs');

  path = require('path');

  marked = require('/home/c34031328/code/marked');

  fileNames = (function() {
    var htmlFileName, pathObject, templateFileName, textFileName;
    textFileName = process.argv[process.argv.length - 1];
    if (!process.argv[2]) {
      throw "no filename given!";
    }
    pathObject = path.parse(textFileName);
    pathObject.dir = path.join(pathObject.dir, '..');
    pathObject.ext = '.html';
    pathObject.base = pathObject.base.replace(/\..*?$/, '.html');
    htmlFileName = path.format(pathObject);
    templateFileName = path.join(path.dirname(htmlFileName), 'system/template.html');
    return {
      text: textFileName,
      html: htmlFileName,
      template: templateFileName
    };
  })();

  cookRaw = function(rawText) {
    var getMain, getTags, getTitle;
    getTitle = function(rawText) {
      return (rawText.match(/\S+/))[0];
    };
    getTags = function(rawText) {
      var i, len, results, tag, tagsMatch;
      tagsMatch = (rawText.match(/^#\S+$/gm)) || [];
      results = [];
      for (i = 0, len = tagsMatch.length; i < len; i++) {
        tag = tagsMatch[i];
        results.push(tag.substr(1));
      }
      return results;
    };
    getMain = function(rawText) {
      return marked(rawText.replace(/^#\S+$/gm, ''));
    };
    this.title = getTitle(rawText);
    this.tags = getTags(rawText);
    return this.main = getMain(rawText);
  };

  getMeta = function(fileName) {
    return console.error("prev, next, date can't access now.");
  };

  templateReplace = function(templateText) {
    return fs.readFile(fileNames.text, 'utf8', function(err, rawText) {
      var mealText, meta;
      if (err) {
        throw err;
      }
      meta = {};
      cookRaw.call(meta, rawText);
      getMeta.call(meta, fileNames.text);
      mealText = templateText.replace('{{prev}}', meta.prev).replace('{{next}}', meta.next).replace('{{date}}', meta.date).replace('{{tags}}', meta.tags).replace('{{title}}', meta.title).replace('\n{{main}}\n', meta.main);
      return console.log(mealText);
    });
  };

  fs.readFile(fileNames.template, 'utf8', function(err, templateText) {
    if (err) {
      throw err;
    }
    return templateReplace(templateText);
  });

}).call(this);
