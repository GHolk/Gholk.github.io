# BBSJS 原型概念版
BBSJS 是由 BBSLua 啟發，在用測覽器上 ptt 時，
執行 ptt 文章內 javascript 的計劃。

<script src="ext/toc.js"></script>

## 使用方法
在文章內按 J 即可執行文內的 bbsjs；
如果是用小書籤，就是直接在文章內點擊小書籤執行。
目前可以在 ptt chrome、term.ptt.cc 或其它類似介面下使用，
ptt 網頁版也可以動。

使用 ptt chrome、term.ptt.cc 等，
建議在 ptt chrome 內右鍵，開啟選項內的好讀模式，
讓 bbsjs 就算超過一頁，也能一次全部載入執行。


## 安裝
目前發布 [[小書籤]] bookmarklet 和 [[Greasemonkey]] 腳本二種執行方法。
grease monkey 是一種簡易的瀏覽器腳本，安裝後在特定的網域執行。
小書籤則是類似書籤，只是點擊時不是前往該網站，而是在現在頁面下執行程式。

### grease monkey
需安裝 grease monkey，chrome 下可以試 Tampermonkey，
[user script 拖管在 github 上][user script jquery bye] ，
在 github 上 [點擊 raw 可以安裝][user script install jquery bye] 。

### 小書籤 bookmarklet
請在下文的 bbs 小書籤超連結上按右鍵加入書籤，
或是用拖曳的方式將超連結放到書籤列中：

[bbsjs 小書籤超連結][bookmarklet jquery bye]

## bbsjs api
bbsjs 會抓取文章內第一個 script 或 html 標籤，
整個寫入到 iframe 中，如同把 script 存成 html 檔後開啟，
並在網頁裡執行 script 內容。

裡面可以用 document.write、alert confirm prompt，
甚至操作 dom，與使用者互動。

```html
<script> 
/* javascript */
alert('hello world!')
var username = prompt('what is your name?')
document.write('good bye ' + username)
</script>
```

如果是 `<html>` 可以直接寫 html 元素，
甚至用 `<script src="https://some.script">` 引入其它 javascript，
就和平常寫網頁一樣。

```html
<html>
<meta charset="utf-8">

<pre id="markdown-raw">
# write your markdown here
this **markdown** is power by [gholk/marked] .

[gholk/marked]: http://github.com/gholk/marked/
</pre>

<div id="markdown-html"></div>

<script src="https://gholk.github.io/marked/marked.min.js"></script>
<script>
  const raw = document.querySelector('#markdown-raw').textContent
  const html = marked(raw)
  document.querySelector('#markdown-html').innerHTML = html
</script>
</html>
```

要用 ajax 的話要設好 cors，
在 iframe 的 context 裡沒有任何網址是 same origin。
（自己 document.write(location.href) 就知道了。）
要注意是網址不要簡寫成 `src="//some.script"` ，
因為該 iframe scheme 是在 `blob:` ，要寫 `https://` 。

## 範例程式

  - [在 PttWeb 板的介紹文兼簡單的程式](https://www.ptt.cc/bbs/PttWeb/M.1521126610.A.A07.html)
  - ptt 測試板 test 裡有幾篇，搜 bbsjs 就有了。
    但一周後會被清掉，就不放網址了。
  - 個人站 <http://clam.ml> 的 test 板裡有幾篇示範程式，被 m 了應該不會被清。 -->

## 版本歷程
以下各標題為版本名，版本從新排到舊排列。

目前版本都沒有和 ptt chrome 互動，
是直接從 html 裡抓出文章內的 script，
再用 css 把執行結果放在頁面中央。
未來期望可以整合進 ptt chrome，
把 script 執行結果直接插到 ptt chrome 的好讀版內。

### jquery bye
移除 jquery 直接使用 `document.querySelector` ，
greasemonkey 使用頁面內自帶的 jquery 的話好像有 scope 問題，
移除就沒問題了。

* [油猴腳本][user script jquery bye] 與
  [安裝油猴腳本][user script install jquery bye]
* [小書籤][bookmarklet jquery bye]

[user script jquery bye]: https://github.com/GHolk/bookmarklet/blob/9f7671fb7c98cacb869d8ca9a85764d042d2678e/bbsjs.user.js
[user script install jquery bye]: https://github.com/GHolk/bookmarklet/raw/9f7671fb7c98cacb869d8ca9a85764d042d2678e/bbsjs.user.js
[bookmarklet jquery bye]: javascript:void%20function%20%28%29%20%7Bfunction%20promptJe%28%29%7B%28new%20JavascriptEvalator%29.prompt%28%29%7Dfunction%20registJe%28listen%29%7Bwindow.addEventListener%28%22keydown%22%2Cdown%3D%3E%7Bif%28listen%28down%29%29try%7BpromptJe%28%29%7Dcatch%28bbsjsError%29%7Bconsole.error%28bbsjsError%29%7D%7D%29%7Dfunction%20assureBbsjsFrame%28%29%7B%24%28%22%23bbsjs-container%22%29%7C%7CinitBbsjsFrame%28%29%7Dfunction%20initBbsjsFrame%28%29%7Bconst%20div%3Ddocument.createElement%28%22div%22%29%3Bdiv.id%3D%22bbsjs-container%22%3Bconst%20homePageUrl%3D%22https%3A%2F%2Fgholk.github.io%2Fbbsjs.html%22%3Bdiv.innerHTML%3D%60%5Cn%3Cbutton%3Emove%3C%2Fbutton%3E%5Cn%3Cbutton%3Eexecute%3C%2Fbutton%3E%5Cn%3Ca%20href%3D%22%24%7BhomePageUrl%7D%22%20target%3D%22bbsjs-iframe%22%3Ehelp%3C%2Fa%3E%5Cn%3Ciframe%20name%3D%22bbsjs-iframe%22%20src%3D%22%24%7BhomePageUrl%7D%22%3E%3C%2Fiframe%3E%5Cn%3Cstyle%3E%5Cn%5Cn%23bbsjs-container%20%7B%5Cn%20%20transition%3A%200.5s%3B%5Cn%20%20position%3A%20fixed%3B%5Cn%20%20top%3A%201em%3B%5Cn%20%20left%3A%201em%3B%5Cn%20%20z-index%3A%202%3B%5Cn%20%20background%3A%20white%3B%5Cn%7D%5Cn%23bbsjs-container%20%2A%20%7B%5Cn%20%20display%3A%20none%3B%5Cn%7D%5Cn%23bbsjs-container%20button%20%7B%5Cn%20%20display%3A%20inline%3B%5Cn%20%20margin%3A%200.5em%3B%5Cn%20%20color%3A%20black%3B%5Cn%7D%5Cn%23bbsjs-container.show%20iframe%20%7B%5Cn%20%20border%3A%20none%3B%5Cn%20%20clear%3A%20both%3B%5Cn%20%20display%3A%20block%3B%5Cn%20%20width%3A%20100%25%3B%5Cn%20%20height%3A%2025em%3B%5Cn%7D%5Cn%23bbsjs-container.show%20a%20%7B%5Cn%20%20display%3A%20inline%3B%5Cn%7D%5Cn%23bbsjs-container.show%20%7B%5Cn%20%20transition%3A%200.5s%3B%5Cn%20%20width%3A%2040%25%3B%5Cn%20%20top%3A%202em%3B%5Cn%20%20left%3A%2030%25%3B%5Cn%20%20z-index%3A%202%3B%5Cn%7D%5Cn%3C%2Fstyle%3E%5Cn%60%2Cwindow.addEventListener%28%22click%22%2Cclick%3D%3E%7Bconst%20button%3Dclick.target%3Bif%28button.matches%28%22%23bbsjs-container%20button%22%29%29if%28%22move%22%3D%3Dbutton.textContent%29%7Bbutton.parentNode.classList.toggle%28%22show%22%29%7Delse%20if%28%22execute%22%3D%3Dbutton.textContent%29try%7BpromptJe%28%29%7Dcatch%28bbsjsError%29%7Bconsole.error%28bbsjsError%29%7D%7D%29%2Cdocument.body.append%28div%29%7Dconst%20%24%3De%3D%3Edocument.querySelector%28e%29%3Bclass%20JavascriptEvalator%7Bconstructor%28%29%7BassureBbsjsFrame%28%29%7Dprompt%28%29%7Bconst%20script%3Dthis.getScript%28%29%3Bthis.execute%28script%29%7DgetArticle%28%29%7Breturn%20location.href.match%28%22www.ptt.cc%22%29%3Fthis.getPttWebArticle%28%29%3Athis.getPttChromeArticle%28%29%7DgetPttWebArticle%28%29%7Breturn%20%24%28%22%23main-container%22%29.textContent%7DgetPttChromeArticle%28%29%7Breturn%20Array.from%28%24%28%22%23mainContainer%22%29.children%29.map%28row%3D%3Erow.textContent%29.join%28%22%5Cn%22%29%7DgetScript%28%29%7Bconst%20article%3Dthis.getArticle%28%29%2Chtml%3Darticle.match%28%2F%3Chtml%5B%5CS%5Cs%5D%2A%3F%3C%5C%2Fhtml%3E%2F%29%2Cscript%3Darticle.match%28%2F%3Cscript%5B%5CS%5Cs%5D%2A%3F%3C%5C%2Fscript%3E%2F%29%3Bif%28html%29return%20html%5B0%5D%3Bif%28script%29return%20script%5B0%5D%3Bthrow%20new%20Error%28%22no%20bbsjs%20script%20found%22%29%7Dexecute%28script%29%7Breturn%20this.iframeObjectUrlExecute%28script%29%7DiframeObjectUrlExecute%28script%29%7Bconst%20scriptFile%3Dnew%20File%28%5Bscript%5D%2C%22bbsjs-frame.html%22%2C%7Btype%3A%22text%2Fhtml%22%7D%29%2CscriptUrl%3DURL.createObjectURL%28scriptFile%29%3B%24%28%22%23bbsjs-container%20iframe%22%29.src%3DscriptUrl%2CURL.revokeObjectURL%28scriptFile%29%2C%24%28%22%23bbsjs-container%22%29.classList.add%28%22show%22%29%7DevalExecute%28script%29%7Bconst%20cleanScript%3Dscript.replace%28%2F%5E%3Cscript%5B%5CS%5Cs%5D%2A%3F%3E%2F%2C%22%22%29.replace%28%2F%3C%5C%2Fscript%3E%24%2F%2C%22%22%29%3Breturn%20eval%28cleanScript%29%7DwindowExecute%28script%29%7Bconst%20scriptWindow%3Dwindow.open%28%22about%3Ablank%22%29%2CscriptDocument%3DscriptWindow.document%3Breturn%20scriptDocument.write%28script%29%2CscriptDocument.close%28%29%2CscriptWindow%7DiframeExecute%28script%29%7B%24%28%22%23bbsjs-container%22%29.classList.add%28%22show%22%29%3Bconst%20iframe%3D%24%28%22%23bbsjs-container%20iframe%22%29%3Breturn%20iframe.contentDocument.write%28script%29%2Ciframe.contentDocument.close%28%29%2Ciframe%7D%7D%22undefined%22%21%3Dtypeof%20GM%3FregistJe%28keydown%3D%3E%22J%22%3D%3Dkeydown.key%29%3ApromptJe%28%29%2CassureBbsjsFrame%28%29%3B%7D%28%29 "bbsjs"

### blob url mime type
chrome 不會把沒指定 `content-type` 的內容當成 html，
所以改用 File api，並設定型別為 `text/html` 。

* [gist](https://gist.github.com/GHolk/3154e8486cf987cf6ab84cae45c7dcc7/bc9ed4c3bb9e9448056986335853ec454152b8cf)
* <a rel="sidebar" title="bbsjs" href="javascript:void function () {const output='bookmarklet';class JavascriptEvalator{prompt(){const script=this.getScript();this.execute(script)}getArticle(){if(location.href.match('www.ptt.cc')){return this.getPttWebArticle()}else return this.getPttChromeArticle()}getPttWebArticle(){return $('#main-container').text()}getPttChromeArticle(){return $('#mainContainer').children().get().map(row=>$(row).text()).join('\n')}getScript(){const article=this.getArticle();const html=article.match(/<html[\S\s]*?<\/html>/);const script=article.match(/<script[\S\s]*?<\/script>/);if(html)return html[0];else if(script)return script[0];else throw new Error('no bbsjs script found')}execute(script){return this.iframeObjectUrlExecute(script)}iframeObjectUrlExecute(script){const htmlHeader={type:'text/html'};const scriptFile=new File([script],'bbsjs-frame.html',htmlHeader);const scriptUrl=URL.createObjectURL(scriptFile);$('#bbsjs-container iframe').attr('src',scriptUrl);URL.revokeObjectURL(scriptFile);$('#bbsjs-container').addClass('show')}evalExecute(script){const cleanScript=script.replace(/^<script[\S\s]*?>/,'').replace(/<\/script>$/,'');return eval(cleanScript)}windowExecute(script){const scriptWindow=window.open('about:blank');const scriptDocument=scriptWindow.document;scriptDocument.write(script);scriptDocument.close();return scriptWindow}iframeExecute(script){$('#bbsjs-container').addClass('show');const iframe=$('#bbsjs-container iframe').get(0);iframe.contentDocument.write(script);iframe.contentDocument.close();return iframe}}function promptJe(){const je=new JavascriptEvalator;je.prompt()}function registJe(listen){$(window).keydown(down=>{if(listen(down)){try{promptJe()}catch(bbsjsError){console.error(bbsjsError)}}})}if($('#bbsjs-container').length==0)initBbsjsFrame();switch(output){case'hello world':alert('hello world!');break;case'bookmarklet':promptJe();break;case'user.js':registJe(keydown=>keydown.key=='J');break}function initBbsjsFrame(){const $div=$('<div>').attr('id','bbsjs-container');const homePageUrl='https://gholk.github.io/bbsjs.html';$('<button>').text('move').appendTo($div).click(click=>{const $container=$(click.target).parent();$container.toggleClass('show')});$('<a>').text('help').attr('target','bbsjs-iframe').attr('href',homePageUrl).appendTo($div);$('<iframe>').attr('name','bbsjs-iframe').attr('src',homePageUrl).appendTo($div);const cssText=`\n#bbsjs-container {\n  transition: 0.5s;\n  position: fixed;\n  top: 1em;\n  left: 1em;\n  z-index: 2;\n  background: white;\n}\n#bbsjs-container * {\n  display: none;\n}\n#bbsjs-container button {\n  display: inline;\n  margin: 0.5em;\n  color: black;\n}\n#bbsjs-container.show iframe {\n  border: none;\n  clear: both;\n  display: block;\n  width: 100%;\n  height: 25em;\n}\n#bbsjs-container.show a {\n  display: inline;\n}\n#bbsjs-container.show {\n  transition: 0.5s;\n  width: 40%;\n  top: 2em;\n  left: 30%;\n  z-index: 2;\n}\n`;$('<style>').text(cssText).appendTo($div);$div.appendTo('body')}}()">小書籤</a>

### 原型說明頁
在一開始的 iframe 加入首頁也就是說明頁面，
還加了一個會在 iframe 內開啟的說明頁的超連結。

* [gist](https://gist.github.com/GHolk/3154e8486cf987cf6ab84cae45c7dcc7/112a45b553f0b1989ec2208a8eb09013cfcdad58)
* <a rel="sidebar" title="bbsjs" href="javascript:void function () {const output='bookmarklet';class JavascriptEvalator{prompt(){const script=this.getScript();this.execute(script)}getArticle(){if(location.href.match('www.ptt.cc')){return this.getPttWebArticle()}else return this.getPttChromeArticle()}getPttWebArticle(){return $('#main-container').text()}getPttChromeArticle(){return $('#mainContainer').children().get().map(row=>$(row).text()).join('\n')}getScript(){const article=this.getArticle();const html=article.match(/<html[\S\s]*?<\/html>/);const script=article.match(/<script[\S\s]*?<\/script>/);return html||script}execute(script){return this.iframeObjectUrlExecute(script)}iframeObjectUrlExecute(script){const scriptBlob=new Blob([script]);const scriptUrl=URL.createObjectURL(scriptBlob);$('#bbsjs-container iframe').attr('src',scriptUrl);URL.revokeObjectURL(scriptBlob);$('#bbsjs-container').addClass('show')}evalExecute(script){const cleanScript=script.replace(/^<script[\S\s]*?>/,'').replace(/<\/script>$/,'');return eval(cleanScript)}windowExecute(script){const scriptWindow=window.open('about:blank');const scriptDocument=scriptWindow.document;scriptDocument.write(script);scriptDocument.close();return scriptWindow}iframeExecute(script){$('#bbsjs-container').addClass('show');const iframe=$('#bbsjs-container iframe').get(0);iframe.contentDocument.write(script);iframe.contentDocument.close();return iframe}}function promptJe(){const je=new JavascriptEvalator;je.prompt()}function registJe(listen){$(window).keydown(down=>{if(listen(down)){try{promptJe()}catch(bbsjsError){console.error(bbsjsError)}}})}if($('#bbsjs-container').length==0)initBbsjsFrame();switch(output){case'hello world':alert('hello world!');break;case'bookmarklet':promptJe();break;case'user.js':registJe(keydown=>keydown.key=='J');break}function initBbsjsFrame(){const $div=$('<div>').attr('id','bbsjs-container');const homePageUrl='https://gholk.github.io/bbsjs.html';$('<button>').text('move').appendTo($div).click(click=>{const $container=$(click.target).parent();$container.toggleClass('show')});$('<a>').text('help').attr('target','bbsjs-iframe').attr('href',homePageUrl).appendTo($div);$('<iframe>').attr('name','bbsjs-iframe').attr('src',homePageUrl).appendTo($div);const cssText=`\n#bbsjs-container {\n  transition: 0.5s;\n  position: fixed;\n  top: 1em;\n  left: 1em;\n  z-index: 2;\n  background: white;\n}\n#bbsjs-container * {\n  display: none;\n}\n#bbsjs-container button {\n  display: inline;\n  margin: 0.5em;\n  color: black;\n}\n#bbsjs-container.show iframe {\n  border: none;\n  clear: both;\n  display: block;\n  width: 100%;\n  height: 25em;\n}\n#bbsjs-container.show a {\n  display: inline;\n}\n#bbsjs-container.show {\n  transition: 0.5s;\n  width: 40%;\n  top: 2em;\n  left: 30%;\n  z-index: 2;\n}\n`;$('<style>').text(cssText).appendTo($div);$div.appendTo('body')}}()">小書籤</a>

### iframe 原型
bbsjs 正式發布友善可用的原型了！
把 bbsjs 在原分頁內用 iframe 載入，
並有按鈕開啟、收合 iframe。

把和有的沒的元素 style 都放在
`body > div#bbsjs-container` 內，
用了很多 jquery。

目前是用 `URL.createObjectURL` 和 `iframe.src` 載入腳本，
因為 grease monkey 的 script 不能寫入 `iframe.contentDocument` ，
二者被判為不同 origin，只好用這種奇怪的方法。

* [gist](https://gist.github.com/GHolk/3154e8486cf987cf6ab84cae45c7dcc7/e3d4baa929c756a6e2911eb2b25c716975ec22f1)
* <a rel="sidebar" title="bbsjs" href="javascript:void function () {const output='bookmarklet';class JavascriptEvalator{prompt(){const script=this.getScript();this.execute(script)}getArticle(){if(location.href.match('www.ptt.cc')){return this.getPttWebArticle()}else return this.getPttChromeArticle()}getPttWebArticle(){return $('#main-container').text()}getPttChromeArticle(){return $('#mainContainer').children().get().map(row=>$(row).text()).join('\n')}getScript(){const article=this.getArticle();const html=article.match(/<html[\S\s]*?<\/html>/);const script=article.match(/<script[\S\s]*?<\/script>/);return html||script}execute(script){return this.iframeObjectUrlExecute(script)}iframeObjectUrlExecute(script){const scriptBlob=new Blob([script]);const scriptUrl=URL.createObjectURL(scriptBlob);$('#bbsjs-container iframe').attr('src',scriptUrl);URL.revokeObjectURL(scriptBlob);$('#bbsjs-container').addClass('show')}evalExecute(script){const cleanScript=script.replace(/^<script[\S\s]*?>/,'').replace(/<\/script>$/,'');return eval(cleanScript)}windowExecute(script){const scriptWindow=window.open('about:blank');const scriptDocument=scriptWindow.document;scriptDocument.write(script);scriptDocument.close();return scriptWindow}iframeExecute(script){$('#bbsjs-container').addClass('show');const iframe=$('#bbsjs-container iframe').get(0);iframe.contentDocument.write(script);iframe.contentDocument.close();return iframe}}function promptJe(){const je=new JavascriptEvalator;je.prompt()}function registJe(listen){$(window).keydown(down=>{if(listen(down)){try{promptJe()}catch(bbsjsError){console.error(bbsjsError)}}})}if($('#bbsjs-container').length==0)initBbsjsFrame();switch(output){case'hello world':alert('hello world!');break;case'bookmarklet':promptJe();break;case'user.js':registJe(keydown=>keydown.key=='J');break}function initBbsjsFrame(){const $div=$('<div>').attr('id','bbsjs-container');$('<button>').text('move').appendTo($div).click(click=>{const $container=$(click.target).parent();$container.toggleClass('show')});$('<iframe>').attr('src','https://gholk.github.io/bbsjs.html').appendTo($div);const cssText=`\n#bbsjs-container {\n  transition: 0.5s;\n  position: fixed;\n  top: 1em;\n  left: 1em;\n  z-index: 2;\n  background: white;\n}\n#bbsjs-container button {\n  float: right;\n  margin: 0.5em;\n  color: black;\n}\n#bbsjs-container iframe {\n  border: none;\n  display: none;\n}\n#bbsjs-container.show iframe {\n  clear: both;\n  display: block;\n  width: 100%;\n  height: 25em;\n}\n#bbsjs-container.show {\n  transition: 0.5s;\n  width: 40%;\n  top: 2em;\n  left: 30%;\n  z-index: 2;\n}\n`;$('<style>').text(cssText).appendTo($div);$div.appendTo('body')}}()">小書籤</a>


### [分頁原型](bbsjs-prototype-bookmarklet-user-js.txt)
bbsjs 會在新開的頁面載入。這本的 user.js 不能用，
後來發現是下一版 iframe 原型那個 same origin 的雷，
`*.user.js` 和原本頁面不是 same origin。

* [gist](https://gist.github.com/GHolk/3154e8486cf987cf6ab84cae45c7dcc7/52642d32989748e6e88d20d96fcddc79cd08e21c)
* <a title="bbsjs" rel="sidebar" href="javascript:void function () {const output='bookmarklet';class FakePrint{constructor(string){if(string)this.data=string;else this.data=''}print(string){this.data+=string}println(string){this.print(string+'\n')}}class JavascriptEvalator{prompt(){const script=this.getScript();this.execute(script)}getArticle(){if(location.href.match('www.ptt.cc')){return this.getPttWebArticle()}else return this.getPttChromeArticle()}getPttWebArticle(){return $('#main-container').text()}getPttChromeArticle(){return $('#mainContainer').children().get().map(row=>$(row).text()).join('\n')}getScript(){const article=this.getArticle();const html=article.match(/<html[\S\s]*?<\/html>/);const script=article.match(/<script[\S\s]*?<\/script>/);return html||script}execute(script){return this.windowExecute(script)}evalExecute(script){const cleanScript=script.replace(/^<script[\S\s]*?>/,'').replace(/<\/script>$/,'');return eval(cleanScript)}windowExecute(script){const scriptWindow=window.open('about:blank');const scriptDocument=scriptWindow.document;scriptDocument.write(script);scriptDocument.close();return scriptWindow}}function promptJe(){const je=new JavascriptEvalator;je.prompt()}function registJe(listen){window.addEventListener('keydown',down=>{if(listen(down)){try{promptJe()}catch(evalError){throw evalError}}})}switch(output){case'hello world':alert('hello world!');break;case'bookmarklet':promptJe();break;case'user.js':registJe(keydown=>keydown.key=='J');break}}()">小書籤</a>

## BBSLua
以前 ptt 有一個在文章內嵌入 lua 程式，
讓使用者可以執行 lua 互動。
目前在 ptt2 可以使用 bbslua，
但因為 lua 還是要在 ptt 伺服器上執行，
考量效能 ptt1 負載已經很重，就沒有引進到 ptt1。

如果是 javascirpt 就能在瀏覽器上執行，不會再增加 ptt 負擔。
而且現在用瀏覽器上 ptt 的人數也增加了，
像 BBSFOX 或 ptt chrome，甚至 ptt 官方也開放用 websocket
從 <https://term.ptt.cc/> 上 ptt。
安裝 bbsjs 後，就能直接在瀏覽器上執行 bbsjs。

## 問題回報與討論
如果要報 bug 或提功能建議，可以在本文下面的 discus 留言板討論，
disqus 如果不想註冊，可以匿名評論。
或是在 [bbsjs 的 github repository][bbsjs github] 開 issue、發 pull request。

[bbsjs github]: http://github.com/GHolk/bookmarklet/blob/master/bbsjs.user.js



#bbsjs
#ptt
#javascript
#browser
#bbs
#user-js
#bookmarklet

